plugins {
    id "org.springframework.boot" version "2.7.5"
    id "io.spring.dependency-management" version "1.1.0"
    id "com.google.cloud.tools.jib" version '3.2.0'
    id "java"
}

group = "ddd-by-example"
version = "1.0.0"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jib {
    from.image = "eclipse-temurin:17-jre"
    container.jvmFlags = ["--enable-preview"]
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {

    annotationProcessor "org.projectlombok:lombok:1.18.24"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.kafka:spring-kafka"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "io.micrometer:micrometer-core:1.10.0"
    implementation "io.micrometer:micrometer-registry-prometheus"
    runtimeOnly "org.postgresql:postgresql:42.5.1"
    implementation "org.hibernate:hibernate-validator:8.0.0.Final"
    implementation "com.vladmihalcea:hibernate-types-52:2.20.0"
    implementation "com.zaxxer:HikariCP:5.0.1"
    implementation "org.liquibase:liquibase-core:4.23.0"
    implementation "io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:2.0.0"

    //Tests
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "com.vaadin.external.google"
    }
    testImplementation "org.springframework.boot:spring-boot-starter-webflux"
    testImplementation "org.testcontainers:junit-jupiter:1.18.3"
    testImplementation "org.testcontainers:testcontainers:1.17.4"
    testImplementation "org.testcontainers:kafka:1.17.4"
    testImplementation "org.testcontainers:postgresql:1.17.4"
    testImplementation "com.github.dasniko:testcontainers-keycloak:2.5.0"
    testImplementation "org.awaitility:awaitility:4.2.0"
    testImplementation "au.com.dius.pact.consumer:junit5:4.3.16"
    testImplementation "au.com.dius.pact.provider:junit5spring:4.3.16"
    testImplementation "org.skyscreamer:jsonassert:1.5.1"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "com.tngtech.archunit:archunit-junit5:1.2.1"
}

configurations {
    compileOnly { extendsFrom annotationProcessor }
    testCompileOnly { extendsFrom annotationProcessor }
    testAnnotationProcessor { extendsFrom annotationProcessor }
}

test {
    useJUnitPlatform()
    jvmArgs("--enable-preview", "-javaagent:build/libs/opentelemetry-javaagent.jar")
    environment("OTEL_EXPORTER_OTLP_ENDPOINT", "http://localhost:4317")
    environment("OTEL_RESOURCE_ATTRIBUTES", "service.name=ddd-devices")
    environment("OTEL_METRICS_EXPORTER", "none")
    environment("OTEL_LOGS_EXPORTER", "none")
}

static defaultSetup(CompileOptions options) {
    options.incremental = true
    options.compilerArgs << "--enable-preview"
    options.compilerArgs << "-parameters"
    options.compilerArgs << "-Xlint:unchecked"
}

compileJava { defaultSetup(options) }
compileTestJava { defaultSetup(options) }
